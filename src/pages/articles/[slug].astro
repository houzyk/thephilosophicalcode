---
import { readOne, readAll } from "../../lib/markdoc/read";
import { article } from "../../lib/markdoc/frontmatter.schema";
import Renderer from "../../components/embed/Renderer.astro";
import BlogPostMeta from "../../components/seo/BlogPostMeta.astro";
import ContentLayout from "../../layouts/ContentLayout.astro";
import { SITE_URL } from "../../config";

export async function getStaticPaths() {
  const articles = await readAll({
    directory: "articles",
    frontmatterSchema: article,
  });

  const filteredPosts = articles
    .filter((p) => p.frontmatter.draft !== true)
    .filter(({ frontmatter }) => !frontmatter.external);

  return filteredPosts.map((article) => {
    return { params: { slug: article.slug } };
  });
}

const { slug } = Astro.params;
if (typeof slug !== "string") {
  throw Error(`slug should be string. Received: ${slug}`);
}

const { content, frontmatter } = await readOne({
  directory: "articles",
  slug,
  frontmatterSchema: article,
});

const ogImageAbsoluteUrl =
  frontmatter.external !== true && frontmatter.ogImagePath
    ? new URL(frontmatter.ogImagePath, SITE_URL).toString()
    : undefined;
---

<ContentLayout title={frontmatter.title} date={frontmatter.date} author={frontmatter.author} authorUrl={frontmatter.authorUrl}>
  <BlogPostMeta
    title={`${frontmatter.title} | The Philosophical Code`}
    description={frontmatter.external ? undefined : frontmatter.description}
    publishDate={frontmatter.date.toISOString()}
    pagePath={`/articles/${slug}`}
    ogImageAbsoluteUrl={ogImageAbsoluteUrl}
    author={frontmatter.author}
    slot="meta"
  />
  <Renderer content={content} slot="content" />
</ContentLayout>
